# name: CI - API Padel

# on:
#   push:
#     branches: [main]
#   pull_request:
#     branches: [main]

# jobs:
#   build-and-test:
#     runs-on: ubuntu-latest

#     services:
#       postgres:
#         image: postgres:14-alpine
#         env:
#           POSTGRES_USER: padeluser
#           POSTGRES_PASSWORD: padelpass
#           POSTGRES_DB: padeldb
#         ports:
#           - 5432:5432
#         options: >-
#           --health-cmd pg_isready
#           --health-interval 10s
#           --health-timeout 5s
#           --health-retries 5

#     env:
#       DATABASE_URL: postgresql://padeluser:padelpass@localhost:5432/padeldb
#       JWT_SECRET: testsecret
#       NODE_ENV: test

#     steps:
#       - name: Checkout repo
#         uses: actions/checkout@v3

#       - name: Use Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: '20'

#       - name: Install dependencies
#         run: npm ci

#       - name: Generate Prisma client
#         run: npx prisma generate

#       - name: Run migrations
#         run: npx prisma migrate deploy

#       - name: Run tests
#         run: npm test

#   docker-security-scan:
#     runs-on: ubuntu-latest
#     needs: build-and-test
#     steps:
#       - name: Checkout repo
#         uses: actions/checkout@v3

#       - name: Build Docker image
#         run: docker build -t api-padel .

#       - name: Security Scan with Trivy
#         uses: aquasecurity/trivy-action@0.12.0
#         with:
#           image-ref: api-padel
#           format: table
#           exit-code: 0 # Cambiar a 1 si quer√©s que falle en vulnerabilidades altas
#           severity: CRITICAL,HIGH
